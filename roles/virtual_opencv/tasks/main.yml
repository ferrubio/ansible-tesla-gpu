---
# tasks file for opencv install

- name: Creates directory for libraries
  file: path={{library_path}} state=directory

- name: get the username running the deploy
  local_action: command whoami
  register: username

- name: Download default version
  get_url:
    dest: '{{library_path}}/{{opencv_file_name}}'
    mode: 0755
    owner: "{{username.stdout}}"
    group: "{{username.stdout}}"
    url: "{{opencv_stable_url}}"

- name: extract opencv in library_path
  unarchive: src="{{library_path}}/{{opencv_file_name}}" dest="{{library_path}}"

- name: Download contrib version
  get_url:
    dest: '{{library_path}}/{{opencv_contrib_file_name}}'
    mode: 0755
    owner: "{{username.stdout}}"
    group: "{{username.stdout}}"
    url: "{{opencv_contrib_stable_url}}"

- name: extract opencv_contrib in library_path
  shell: unzip -qo {{library_path}}/{{opencv_contrib_file_name}} -d {{library_path}}

- name: install numpy
  shell: pip install numpy --upgrade

- name: Creates directory for build
  file: path='{{library_path}}/opencv-{{opencv_version}}/release' state=directory

- name: cmake for opencv
  shell: cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX={{venv_path}} -D OPENCV_EXTRA_MODULES_PATH={{library_path}}/opencv_contrib-{{opencv_version}}/modules ..
  args:
    chdir: '{{library_path}}/opencv-{{opencv_version}}/release'

- name: get cores for make
  shell: nproc
  register: num_cores

- name: make for opencv
  shell: make -j{{num_cores.stdout}}
  args:
    chdir: '{{library_path}}/opencv-{{opencv_version}}/release'

- name: make install for opencv
  shell: make install
  args:
    chdir: '{{library_path}}/opencv-{{opencv_version}}/release'
